{"ast":null,"code":"import { client } from \"./api-client\";\nimport { safeStorageGet, safeStorageSet } from \"./storage-client\";\nconst TOKEN_URL = `/atr-gateway/identity-management/api/v1/auth/short-token?useDeflate=true`;\nconst TOKEN_KEY = \"apiToken\";\n\nasync function getToken() {\n  let token = safeStorageGet(TOKEN_KEY);\n\n  if (token) {\n    return token;\n  } else {\n    const user = {\n      username: \"candidate_test1\",\n      password: \"candidate_test1\"\n    };\n    const headers = {\n      method: \"POST\",\n      accept: \"*/*\",\n      \"Content-Type\": \"application/json\",\n      body: JSON.stringify(user)\n    };\n    return client(TOKEN_URL, {\n      method: \"POST\",\n      headers\n    }).then(response => {\n      const value = response.token;\n      safeStorageSet(TOKEN_KEY, value);\n      return response.token;\n    });\n  }\n}\n\nexport { getToken };","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/utils/auth-provider.ts"],"names":["client","safeStorageGet","safeStorageSet","TOKEN_URL","TOKEN_KEY","getToken","token","user","username","password","headers","method","accept","body","JSON","stringify","then","response","value"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,kBAA/C;AACA,MAAMC,SAAS,GAAI,0EAAnB;AACA,MAAMC,SAAS,GAAG,UAAlB;;AACA,eAAeC,QAAf,GAA2C;AACzC,MAAIC,KAAK,GAAGL,cAAc,CAACG,SAAD,CAA1B;;AACA,MAAIE,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD,GAFD,MAEO;AACL,UAAMC,IAAI,GAAG;AACXC,MAAAA,QAAQ,EAAE,iBADC;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,UAAMC,OAAoB,GAAG;AAC3BC,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,MAAM,EAAE,KAFmB;AAG3B,sBAAgB,kBAHW;AAI3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAJqB,KAA7B;AAOA,WAAOP,MAAM,CAACG,SAAD,EAAY;AAAEQ,MAAAA,MAAM,EAAE,MAAV;AAAkBD,MAAAA;AAAlB,KAAZ,CAAN,CAA+CM,IAA/C,CAAqDC,QAAD,IAAc;AACvE,YAAMC,KAAK,GAAID,QAAD,CAAkBX,KAAhC;AAEAJ,MAAAA,cAAc,CAACE,SAAD,EAAYc,KAAZ,CAAd;AACA,aAAQD,QAAD,CAAkBX,KAAzB;AACD,KALM,CAAP;AAMD;AACF;;AAED,SAASD,QAAT","sourcesContent":["import { client } from \"./api-client\"\nimport { safeStorageGet, safeStorageSet } from \"./storage-client\"\nconst TOKEN_URL = `/atr-gateway/identity-management/api/v1/auth/short-token?useDeflate=true`\nconst TOKEN_KEY = \"apiToken\"\nasync function getToken(): Promise<string> {\n  let token = safeStorageGet(TOKEN_KEY)\n  if (token) {\n    return token\n  } else {\n    const user = {\n      username: \"candidate_test1\",\n        password: \"candidate_test1\",\n      \n    }\n    const headers: HeadersInit = {\n      method: \"POST\",\n      accept: \"*/*\",\n      \"Content-Type\": \"application/json\",\n      body: JSON.stringify(user),\n    }\n\n    return client(TOKEN_URL, { method: \"POST\", headers }).then((response) => {\n      const value = (response as any).token\n\n      safeStorageSet(TOKEN_KEY, value)\n      return (response as any).token as string\n    })\n  }\n}\n\nexport { getToken }\n"]},"metadata":{},"sourceType":"module"}