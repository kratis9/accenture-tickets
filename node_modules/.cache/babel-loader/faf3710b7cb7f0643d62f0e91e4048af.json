{"ast":null,"code":"var _jsxFileName = \"/Users/kratichauhan/tickets-app/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { fetchDashboardData } from \"../utils/api-client\";\nimport Dashboard from \"./Dashboard\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport Config from \"../config\";\nimport { setPage } from \"../store/actions/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  dispatch,\n  loading,\n  recordsParsed,\n  ticketCount\n}) {\n  _s();\n\n  const pageNumber = ticketCount ? ticketCount / Config.recordsPerAPICall : 0;\n  useEffect(() => {\n    if (recordsParsed === null) dispatch(setPage(Config.recordsPerPage));\n\n    if (recordsParsed === null || recordsParsed === ticketCount - 2 * Config.recordsPerPage) {\n      // dispatch(loadingBegin())\n      dispatch(fetchDashboardData(pageNumber));\n    }\n  }, [recordsParsed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading === false ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nfunction mapStateToProps({\n  loading,\n  pagination,\n  tickets\n}) {\n  return {\n    loading: authToken === null,\n    recordsParsed: pagination.recordsParsed,\n    ticketCount: Object.keys(tickets).length\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/components/App.tsx"],"names":["useEffect","fetchDashboardData","Dashboard","CircularProgress","connect","Config","setPage","App","dispatch","loading","recordsParsed","ticketCount","pageNumber","recordsPerAPICall","recordsPerPage","mapStateToProps","pagination","tickets","authToken","Object","keys","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,kBAAT,QAAmC,qBAAnC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,6BAAxB;;;AAGA,SAASC,GAAT,CAAa;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAb,EAAgE;AAAA;;AAC9D,QAAMC,UAAU,GAAGD,WAAW,GAAGA,WAAW,GAAGN,MAAM,CAACQ,iBAAxB,GAA4C,CAA1E;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,aAAa,KAAK,IAAtB,EAA4BF,QAAQ,CAACF,OAAO,CAACD,MAAM,CAACS,cAAR,CAAR,CAAR;;AAC5B,QACEJ,aAAa,KAAK,IAAlB,IACAA,aAAa,KAAKC,WAAW,GAAG,IAAIN,MAAM,CAACS,cAF7C,EAGE;AACA;AACAN,MAAAA,QAAQ,CAACP,kBAAkB,CAACW,UAAD,CAAnB,CAAR;AACD;AACF,GATQ,EASN,CAACF,aAAD,CATM,CAAT;AAWA,sBAAO;AAAA,cAAMD,OAAO,KAAK,KAAZ,gBAAoB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAApB,gBAA2C,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAfQF,G;;KAAAA,G;;AAiBT,SAASQ,eAAT,CAAyB;AAAEN,EAAAA,OAAF;AAAWO,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAzB,EAA2D;AACzD,SAAO;AACLR,IAAAA,OAAO,EAAES,SAAS,KAAK,IADlB;AAELR,IAAAA,aAAa,EAAEM,UAAU,CAACN,aAFrB;AAGLC,IAAAA,WAAW,EAAEQ,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI;AAH7B,GAAP;AAKD;;AAED,eAAejB,OAAO,CAACW,eAAD,CAAP,CAAyBR,GAAzB,CAAf","sourcesContent":["import { useEffect } from \"react\"\n\nimport { fetchDashboardData } from \"../utils/api-client\"\n\nimport Dashboard from \"./Dashboard\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport { connect } from \"react-redux\"\nimport Config from \"../config\"\nimport { setPage } from \"../store/actions/pagination\"\nimport { loadingBegin } from \"../store/actions/loader\"\n\nfunction App({ dispatch, loading, recordsParsed, ticketCount }) {\n  const pageNumber = ticketCount ? ticketCount / Config.recordsPerAPICall : 0\n\n  useEffect(() => {\n    if (recordsParsed === null) dispatch(setPage(Config.recordsPerPage))\n    if (\n      recordsParsed === null ||\n      recordsParsed === ticketCount - 2 * Config.recordsPerPage\n    ) {\n      // dispatch(loadingBegin())\n      dispatch(fetchDashboardData(pageNumber))\n    }\n  }, [recordsParsed])\n\n  return <div>{loading === false ? <CircularProgress /> : <Dashboard />}</div>\n}\n\nfunction mapStateToProps({ loading, pagination, tickets }) {\n  return {\n    loading: authToken === null,\n    recordsParsed: pagination.recordsParsed,\n    ticketCount: Object.keys(tickets).length,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}