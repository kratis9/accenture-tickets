{"ast":null,"code":"import { getToken } from \"./auth-provider\";\nconst token = getToken();\n\nasync function client(endpoint, customConfig = {}) {\n  if (!token) {\n    throw new Error(\"Token not provided.\");\n  }\n\n  const config = {\n    method: \"GET\",\n    apiToken: token,\n    ...customConfig\n  };\n  const response = await window.fetch(`${process.env.API_URL}/${endpoint}`, config);\n  const data = await response.json();\n\n  if (response.ok) {\n    return data;\n  } else {\n    return Promise.reject(data);\n  }\n}\n\nfunction getTickets(page = 0) {\n  const TICKET_URL = `atr-gateway/ticket-management/api/v1/tickets? ticketType=incident&sortDirection=DESC&page=${page}&perPage=10`;\n  return client(TICKET_URL).then(responseData => responseData, errorData => errorData);\n}\n\nexport { client, getTickets };","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/utils/api-client.ts"],"names":["getToken","token","client","endpoint","customConfig","Error","config","method","apiToken","response","window","fetch","process","env","API_URL","data","json","ok","Promise","reject","getTickets","page","TICKET_URL","then","responseData","errorData"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,eAAeE,MAAf,CAAsBC,QAAtB,EAAwCC,YAAY,GAAG,EAAvD,EAAwE;AACtE,MAAI,CAACH,KAAL,EAAY;AACV,UAAM,IAAII,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,QAAQ,EAAEP,KAFG;AAGb,OAAGG;AAHU,GAAf;AAMA,QAAMK,QAAQ,GAAG,MAAMC,MAAM,CAACC,KAAP,CACpB,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,IAAGX,QAAS,EADd,EAErBG,MAFqB,CAAvB;AAIA,QAAMS,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;AACA,MAAIP,QAAQ,CAACQ,EAAb,EAAiB;AACf,WAAOF,IAAP;AACD,GAFD,MAEO;AACL,WAAOG,OAAO,CAACC,MAAR,CAAeJ,IAAf,CAAP;AACD;AACF;;AAED,SAASK,UAAT,CAAoBC,IAAY,GAAG,CAAnC,EAAsC;AACpC,QAAMC,UAAU,GAAI,6FAA4FD,IAAK,aAArH;AAEA,SAAOnB,MAAM,CAACoB,UAAD,CAAN,CAAmBC,IAAnB,CACJC,YAAD,IAAkBA,YADb,EAEJC,SAAD,IAAeA,SAFV,CAAP;AAID;;AAED,SAASvB,MAAT,EAAiBkB,UAAjB","sourcesContent":["import { getToken } from \"./auth-provider\"\n\nconst token = getToken();\n\nasync function client(endpoint: string, customConfig = {}): Promise<{}> {\n  if (!token) {\n    throw new Error(\"Token not provided.\")\n  }\n\n  const config = {\n    method: \"GET\",\n    apiToken: token,\n    ...customConfig,\n  }\n\n  const response = await window.fetch(\n    `${process.env.API_URL}/${endpoint}`,\n    config\n  )\n  const data = await response.json()\n  if (response.ok) {\n    return data\n  } else {\n    return Promise.reject(data)\n  }\n}\n\nfunction getTickets(page: number = 0) {\n  const TICKET_URL = `atr-gateway/ticket-management/api/v1/tickets? ticketType=incident&sortDirection=DESC&page=${page}&perPage=10`\n\n  return client(TICKET_URL).then(\n    (responseData) => responseData,\n    (errorData) => errorData\n  )\n}\n\nexport { client, getTickets }\n"]},"metadata":{},"sourceType":"module"}