{"ast":null,"code":"var _jsxFileName = \"/Users/kratichauhan/tickets-app/src/components/Dashboard.tsx\";\nimport Config from \"../config\";\nimport { connect } from \"react-redux\"; // UI\n\nimport Tickets from \"./Tickets\";\nimport Sidebar from \"./Sidebar\";\nimport Pagination from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard({\n  tickets\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tickets, {\n      tickets: tickets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/**\n * This method performs data-transformation on tickets before passing it to the Dashboard component\n * @param tickets : hashmap of tikects\n * @returns Array of tickets\n */\n\n\n_c = Dashboard;\n\nfunction mapStateToProps({\n  tickets,\n  pagination\n}) {\n  let mappedTickets = [];\n  let pageNumber = pagination.recordsParsed || 0;\n\n  if (tickets) {\n    let ticketIds = Object.keys(tickets).slice(pageNumber, Config.recordsPerPage + pageNumber);\n\n    if (tickets && ticketIds.length > 1) {\n      mappedTickets = ticketIds.map(id => tickets[id]);\n    }\n  }\n\n  return {\n    tickets: mappedTickets\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/components/Dashboard.tsx"],"names":["Config","connect","Tickets","Sidebar","Pagination","Dashboard","tickets","mapStateToProps","pagination","mappedTickets","pageNumber","recordsParsed","ticketIds","Object","keys","slice","recordsPerPage","length","map","id"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgC;AAC9B,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;AAED;AACA;AACA;AACA;AACA;;;KAdSD,S;;AAeT,SAASE,eAAT,CAAyB;AAAED,EAAAA,OAAF;AAAWE,EAAAA;AAAX,CAAzB,EAAkD;AAChD,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,UAAU,GAAGF,UAAU,CAACG,aAAX,IAA4B,CAA7C;;AACA,MAAIL,OAAJ,EAAa;AACX,QAAIM,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,KAArB,CACdL,UADc,EAEdV,MAAM,CAACgB,cAAP,GAAwBN,UAFV,CAAhB;;AAIA,QAAIJ,OAAO,IAAIM,SAAS,CAACK,MAAV,GAAmB,CAAlC,EAAqC;AACnCR,MAAAA,aAAa,GAAGG,SAAS,CAACM,GAAV,CAAeC,EAAD,IAAQb,OAAO,CAACa,EAAD,CAA7B,CAAhB;AACD;AACF;;AACD,SAAO;AAAEb,IAAAA,OAAO,EAAEG;AAAX,GAAP;AACD;;AACD,eAAeR,OAAO,CAACM,eAAD,CAAP,CAAyBF,SAAzB,CAAf","sourcesContent":["import Config from \"../config\"\nimport { connect } from \"react-redux\"\n\n// UI\nimport Tickets from \"./Tickets\"\nimport Sidebar from \"./Sidebar\"\nimport Pagination from \"./Pagination\"\n\nfunction Dashboard({ tickets }) {\n  return (\n    <div>\n      <Tickets tickets={tickets} />\n      <Pagination />\n      <Sidebar />\n    </div>\n  )\n}\n\n/**\n * This method performs data-transformation on tickets before passing it to the Dashboard component\n * @param tickets : hashmap of tikects\n * @returns Array of tickets\n */\nfunction mapStateToProps({ tickets, pagination }) {\n  let mappedTickets = []\n  let pageNumber = pagination.recordsParsed || 0\n  if (tickets) {\n    let ticketIds = Object.keys(tickets).slice(\n      pageNumber,\n      Config.recordsPerPage + pageNumber\n    )\n    if (tickets && ticketIds.length > 1) {\n      mappedTickets = ticketIds.map((id) => tickets[id])\n    }\n  }\n  return { tickets: mappedTickets }\n}\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}