{"ast":null,"code":"var _jsxFileName = \"/Users/kratichauhan/tickets-app/src/components/Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport Config from \"../config\";\nimport { connect } from \"react-redux\"; // UI\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \".8rem\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  pagination: {\n    listStyleType: \"none\",\n    margin: 0,\n    display: \"flex\",\n    padding: \"1rem\"\n  },\n  status: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  statusText: {\n    fontSize: \".\"\n  },\n  button: {\n    fontSize: \"12px\"\n  }\n});\n\nconst Pagination = ({\n  totalRecords,\n  recordsParsed,\n  onSetPage\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const totalPages = Math.ceil(totalRecords / Config.recordsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.pagination,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          \"data-testid\": \"BACK\",\n          className: classes.button,\n          onClick: () => onSetPage(recordsParsed - Config.recordsPerPage),\n          disabled: recordsParsed / Config.recordsPerPage === 1,\n          children: \"BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.status,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.statusText,\n          color: \"textSecondary\",\n          children: [\"Page \", recordsParsed / Config.recordsPerPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: () => onSetPage(recordsParsed + Config.recordsPerPage),\n          disabled: recordsParsed / Config.recordsPerPage === totalPages,\n          children: \"NEXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Pagination;\n\nconst mapStateToProps = ({\n  pagination\n}) => {\n  return {\n    totalRecords: pagination.totalRecords,\n    recordsParsed: pagination.recordsParsed || 0\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPage: (page, payload) => dispatch({\n    type: \"SET_PAGE\",\n    page,\n    payload\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/components/Pagination.tsx"],"names":["Config","connect","Typography","Button","makeStyles","useStyles","root","fontSize","display","justifyContent","pagination","listStyleType","margin","padding","status","alignItems","statusText","button","Pagination","totalRecords","recordsParsed","onSetPage","classes","totalPages","Math","ceil","recordsPerPage","mapStateToProps","mapDispatchToProps","dispatch","page","payload","type"],"mappings":"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","sourcesContent":["import Config from \"../config\"\nimport { connect } from \"react-redux\"\n\n// UI\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  root: { fontSize: \".8rem\", display: \"flex\", justifyContent: \"center\" },\n  pagination: {\n    listStyleType: \"none\",\n    margin: 0,\n    display: \"flex\",\n    padding: \"1rem\",\n  },\n  status: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  statusText: {\n    fontSize: \".\",\n  },\n  button: {\n    fontSize: \"12px\",\n  },\n})\n\nconst Pagination = ({ totalRecords, recordsParsed, onSetPage }) => {\n  const classes = useStyles()\n  const totalPages = Math.ceil(totalRecords / Config.recordsPerPage)\n  return (\n    <div className={classes.root}>\n      <ul className={classes.pagination}>\n        <li className=\"page-item\">\n          <Button\n            data-testid=\"BACK\"\n            className={classes.button}\n            onClick={() => onSetPage(recordsParsed - Config.recordsPerPage)}\n            disabled = {(recordsParsed / Config.recordsPerPage) === 1}\n          >\n            BACK\n          </Button>\n        </li>\n\n        <li className={classes.status}>\n          <span></span>\n          <Typography className={classes.statusText} color=\"textSecondary\">\n            Page {recordsParsed / Config.recordsPerPage} of {totalPages}\n          </Typography>\n        </li>\n        <li className=\"page-item\">\n          <Button\n            className={classes.button}\n            onClick={() => onSetPage(recordsParsed + Config.recordsPerPage)}\n            disabled ={(recordsParsed / Config.recordsPerPage)=== totalPages}\n          >\n            NEXT\n          </Button>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ pagination }) => {\n  return {\n    totalRecords: pagination.totalRecords,\n    recordsParsed: pagination.recordsParsed || 0,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetPage: (page, payload) => dispatch({ type: \"SET_PAGE\", page, payload }),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination)\n"]},"metadata":{},"sourceType":"module"}