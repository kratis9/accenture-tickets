{"ast":null,"code":"var _jsxFileName = \"/Users/kratichauhan/tickets-app/src/components/Pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"12px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  pagination: {\n    listStyleType: \"none\",\n    margin: 0,\n    display: \"flex\",\n    padding: \"1rem\"\n  },\n  pageInfo: {\n    fontSize: \"12px\",\n    padding: \"0 10px\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  button: {\n    fontSize: \"12px\"\n  }\n});\n\nconst Pagination = ({\n  totalRecords,\n  currentPage,\n  pageLimit,\n  onSetPage\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const totalPages = Math.ceil(totalRecords / pageLimit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.pagination,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: () => onSetPage(currentPage - 1),\n          children: \"BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.pageInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: ticket.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: () => onSetPage(currentPage + 1),\n          children: \"NEXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Pagination;\n\nconst mapStateToProps = ({\n  pagination\n}) => {\n  return {\n    totalRecords: pagination.totalRecords,\n    currentPage: pagination.currnetPage,\n    pageLimit: pagination.pageLimit\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSetPage: (page, payload) => dispatch({\n    type: \"SET_PAGE\",\n    page,\n    payload\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/components/Pagination.tsx"],"names":["React","makeStyles","Typography","Button","connect","useStyles","root","fontSize","display","justifyContent","pagination","listStyleType","margin","padding","pageInfo","alignItems","button","Pagination","totalRecords","currentPage","pageLimit","onSetPage","classes","totalPages","Math","ceil","ticket","state","mapStateToProps","currnetPage","mapDispatchToProps","dispatch","page","payload","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport { connect } from \"react-redux\"\n\nconst useStyles = makeStyles({\n  root: { fontSize: \"12px\", display: \"flex\", justifyContent: \"center\" },\n  pagination: {\n    listStyleType: \"none\",\n    margin: 0,\n    display: \"flex\",\n    padding: \"1rem\",\n  },\n  pageInfo: {\n    fontSize: \"12px\",\n    padding: \"0 10px\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  button: {\n    fontSize: \"12px\",\n  },\n})\n\nconst Pagination = ({ totalRecords, currentPage, pageLimit, onSetPage }) => {\n  const classes = useStyles()\n  const totalPages = Math.ceil(totalRecords / pageLimit)\n  return (\n    <div className={classes.root}>\n      <ul className={classes.pagination}>\n        <li className=\"page-item\">\n          <Button\n            className={classes.button}\n            onClick={() => onSetPage(currentPage - 1)}\n          >\n            BACK\n          </Button>\n        </li>\n\n        <li className={classes.pageInfo}>\n          <span>\n            Page {currentPage} of {totalPages}\n          </span>\n          <Typography color=\"textSecondary\">{ticket.state}</Typography>\n        </li>\n        <li className=\"page-item\">\n          <Button\n            className={classes.button}\n            onClick={() => onSetPage(currentPage + 1)}\n          >\n            NEXT\n          </Button>\n        </li>\n      </ul>\n    </div>\n  )\n}\nconst mapStateToProps = ({ pagination }) => {\n  return {\n    totalRecords: pagination.totalRecords,\n    currentPage: pagination.currnetPage,\n    pageLimit: pagination.pageLimit,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetPage: (page, payload) => dispatch({ type: \"SET_PAGE\", page, payload }),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination)\n"]},"metadata":{},"sourceType":"module"}