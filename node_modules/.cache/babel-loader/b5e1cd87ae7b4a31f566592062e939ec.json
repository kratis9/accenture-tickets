{"ast":null,"code":"var _jsxFileName = \"/Users/kratichauhan/tickets-app/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { fetchDashboardData } from \"../utils/api-client\";\nimport Dashboard from \"./Dashboard\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport { setPageLimit } from \"../store/actions/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pageLimitConstant = 50;\n\nfunction App({\n  dispatch,\n  loading,\n  recordsParsed,\n  ticketCount\n}) {\n  _s();\n\n  const pageNumber = ticketCount / pageLimitConstant;\n  useEffect(() => {\n    if (recordsParsed == null) {\n      dispatch(setPageLimit(pageLimitConstant));\n      dispatch(fetchDashboardData(0));\n    }\n\n    if (recordsParsed == ticketCount - 20) dispatch(fetchDashboardData(pageNumber));\n  }, [recordsParsed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading === false ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nfunction mapStateToProps({\n  authToken,\n  pagination,\n  tickets,\n  loading = false\n}) {\n  return {\n    loading: authToken === null,\n    recordsParsed: pagination.recordsParsed,\n    pageLimit: pagination.pageLimit,\n    ticketCount: Object.keys(tickets).length\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/components/App.tsx"],"names":["useEffect","fetchDashboardData","Dashboard","CircularProgress","connect","setPageLimit","pageLimitConstant","App","dispatch","loading","recordsParsed","ticketCount","pageNumber","mapStateToProps","authToken","pagination","tickets","pageLimit","Object","keys","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,kBAAT,QAAmC,qBAAnC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,EAA1B;;AACP,SAASC,GAAT,CAAa;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAb,EAAgE;AAAA;;AAC9D,QAAMC,UAAU,GAAGD,WAAW,GAAGL,iBAAjC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,aAAa,IAAI,IAArB,EAA2B;AACzBF,MAAAA,QAAQ,CAACH,YAAY,CAACC,iBAAD,CAAb,CAAR;AACAE,MAAAA,QAAQ,CAACP,kBAAkB,CAAC,CAAD,CAAnB,CAAR;AACD;;AACD,QAAIS,aAAa,IAAIC,WAAW,GAAG,EAAnC,EACEH,QAAQ,CAACP,kBAAkB,CAACW,UAAD,CAAnB,CAAR;AACH,GAPQ,EAON,CAACF,aAAD,CAPM,CAAT;AASA,sBAAO;AAAA,cAAMD,OAAO,KAAK,KAAZ,gBAAoB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAApB,gBAA2C,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAbQF,G;;KAAAA,G;;AAcT,SAASM,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA,OAAzB;AAAkCP,EAAAA,OAAO,GAAG;AAA5C,CAAzB,EAA8E;AAC5E,SAAO;AACLA,IAAAA,OAAO,EAAEK,SAAS,KAAK,IADlB;AAELJ,IAAAA,aAAa,EAAEK,UAAU,CAACL,aAFrB;AAGLO,IAAAA,SAAS,EAAEF,UAAU,CAACE,SAHjB;AAILN,IAAAA,WAAW,EAAEO,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI;AAJ7B,GAAP;AAMD;;AAED,eAAehB,OAAO,CAACS,eAAD,CAAP,CAAyBN,GAAzB,CAAf","sourcesContent":["import { useEffect } from \"react\"\n\nimport { fetchDashboardData } from \"../utils/api-client\"\n\nimport Dashboard from \"./Dashboard\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport { connect } from \"react-redux\"\nimport { setPageLimit } from \"../store/actions/pagination\"\n\nexport const pageLimitConstant = 50\nfunction App({ dispatch, loading, recordsParsed, ticketCount }) {\n  const pageNumber = ticketCount / pageLimitConstant\n\n  useEffect(() => {\n    if (recordsParsed == null) {\n      dispatch(setPageLimit(pageLimitConstant))\n      dispatch(fetchDashboardData(0))\n    }\n    if (recordsParsed == ticketCount - 20)\n      dispatch(fetchDashboardData(pageNumber))\n  }, [recordsParsed])\n\n  return <div>{loading === false ? <CircularProgress /> : <Dashboard />}</div>\n}\nfunction mapStateToProps({ authToken, pagination, tickets, loading = false }) {\n  return {\n    loading: authToken === null,\n    recordsParsed: pagination.recordsParsed,\n    pageLimit: pagination.pageLimit,\n    ticketCount: Object.keys(tickets).length,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}