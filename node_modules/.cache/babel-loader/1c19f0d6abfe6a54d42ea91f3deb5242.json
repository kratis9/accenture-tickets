{"ast":null,"code":"var _jsxFileName = \"/Users/kratichauhan/tickets-app/src/components/Dashboard.tsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { connect } from \"react-redux\";\nimport { Tickets } from \"./Tickets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard({\n  tickets,\n  more\n}) {\n  // console.log(tickets)\n  // const [sideBarVisibility, setSideBarVisibilty] = useState(false)\n  // const [selectedTicket, setSelectedTicket] = useState(null)\n  // const toggleDrawer = (ticket) => {\n  //   if (ticket) {\n  //     setSelectedTicket(ticket)\n  //   }\n  //   setSideBarVisibilty(!sideBarVisibility)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tickets, {\n      tickets: tickets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: sideBarVisibility,\n      onClose: () => {\n        toggleDrawer();\n      },\n      children: /*#__PURE__*/_jsxDEV(TicketInfo, {\n        ticket: selectedTicket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: 1,\n      lastPage: 5,\n      setPage: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" */}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Dashboard;\n\nfunction mapStateToProps({\n  tickets\n}) {\n  debugger;\n  let mappedTickets = [];\n  let data = tickets;\n\n  if (data.tickets && data.tickets.length > 1) {\n    mappedTickets = data.tickets.map(ticket => ticket.allFields);\n  }\n\n  return {\n    tickets: mappedTickets\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/components/Dashboard.tsx"],"names":["Drawer","connect","Tickets","Dashboard","tickets","more","sideBarVisibility","toggleDrawer","selectedTicket","mapStateToProps","mappedTickets","data","length","map","ticket","allFields"],"mappings":";AAGA,OAAOA,MAAP,MAAmB,0BAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAnB,EAAsC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAII,QAAC,MAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,IAAI,EAAEE,iBAFR;AAGE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,YAAY;AACb,OALH;AAAA,6BAOG,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA;AAPH;AAAA;AAAA;AAAA;AAAA,YAJJ,eAcE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,CAAlB;AAAqB,MAAA,QAAQ,EAAE,CAA/B;AAAkC,MAAA,OAAO,EAAE,MAAM,CAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KA9BQL,S;;AAgCT,SAASM,eAAT,CAAyB;AAAEL,EAAAA;AAAF,CAAzB,EAAsC;AACpC;AACA,MAAIM,aAAa,GAAG,EAApB;AACA,MAAIC,IAAI,GAAGP,OAAX;;AACA,MAAIO,IAAI,CAACP,OAAL,IAAgBO,IAAI,CAACP,OAAL,CAAaQ,MAAb,GAAsB,CAA1C,EAA6C;AAC3CF,IAAAA,aAAa,GAAGC,IAAI,CAACP,OAAL,CAAaS,GAAb,CAAkBC,MAAD,IAAYA,MAAM,CAACC,SAApC,CAAhB;AACD;;AAED,SAAO;AAAEX,IAAAA,OAAO,EAAEM;AAAX,GAAP;AACD;;AACD,eAAeT,OAAO,CAACQ,eAAD,CAAP,CAAyBN,SAAzB,CAAf","sourcesContent":["import { Grid } from \"@material-ui/core\"\nimport { useState } from \"react\"\n\nimport Drawer from \"@material-ui/core/Drawer\"\n\nimport { connect } from \"react-redux\"\nimport { Tickets } from \"./Tickets\"\n\nfunction Dashboard({ tickets, more }) {\n  // console.log(tickets)\n  // const [sideBarVisibility, setSideBarVisibilty] = useState(false)\n  // const [selectedTicket, setSelectedTicket] = useState(null)\n  // const toggleDrawer = (ticket) => {\n  //   if (ticket) {\n  //     setSelectedTicket(ticket)\n  //   }\n\n  //   setSideBarVisibilty(!sideBarVisibility)\n  // }\n\n  return (\n    <div>\n      <Tickets tickets={tickets} />\n     \n      \n        <Drawer\n          anchor=\"right\"\n          open={sideBarVisibility}\n          onClose={() => {\n            toggleDrawer()\n          }}\n        >\n          {<TicketInfo ticket={selectedTicket} />}\n        </Drawer>\n      \n      <Pagination page={1} lastPage={5} setPage={() => {}} /> */}\n    </div>\n  )\n}\n\nfunction mapStateToProps({ tickets }) {\n  debugger\n  let mappedTickets = []\n  let data = tickets\n  if (data.tickets && data.tickets.length > 1) {\n    mappedTickets = data.tickets.map((ticket) => ticket.allFields)\n  }\n\n  return { tickets: mappedTickets }\n}\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}