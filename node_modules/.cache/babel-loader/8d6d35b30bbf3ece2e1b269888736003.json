{"ast":null,"code":"const TOKEN_URL = `/atr-gateway/identity-management/api/v1/auth/short-token?useDeflate=true`;\nconst TOKEN_KEY = \"apiToken\";\n\nasync function getToken() {\n  //   let token = safeStorageGet(TOKEN_KEY)\n  //   if (token) {\n  //     return token\n  //   } else {\n  //     const user = {\n  //       username: \"candidate_test1\",\n  //       password: \"candidate_test1\",\n  //       snowEnabled: true,\n  //     }\n  //     const headers: HeadersInit = {\n  //       method: \"POST\",\n  //       accept: \"*/*\",\n  //       \"Content-Type\": \"application/json\",\n  //     }\n  //     return client(TOKEN_URL, {\n  //       method: \"POST\",\n  //       body: JSON.stringify(user),\n  //       headers,\n  //     }).then((response) => {\n  //       const value = (response as any).token\n  //       safeStorageSet(TOKEN_KEY, value)\n  //       return (response as any).token as string\n  //     })\n  //   }\n  return;\n}\n\nexport { getToken };","map":{"version":3,"sources":["/Users/kratichauhan/tickets-app/src/utils/auth-provider.ts"],"names":["TOKEN_URL","TOKEN_KEY","getToken"],"mappings":"AAEA,MAAMA,SAAS,GAAI,0EAAnB;AACA,MAAMC,SAAS,GAAG,UAAlB;;AACA,eAAeC,QAAf,GAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACI;AACH;;AAED,SAASA,QAAT","sourcesContent":["import { client } from \"./api-client\"\nimport { safeStorageGet, safeStorageSet } from \"./storage-client\"\nconst TOKEN_URL = `/atr-gateway/identity-management/api/v1/auth/short-token?useDeflate=true`\nconst TOKEN_KEY = \"apiToken\"\nasync function getToken(): Promise<string> {\n//   let token = safeStorageGet(TOKEN_KEY)\n//   if (token) {\n//     return token\n//   } else {\n//     const user = {\n//       username: \"candidate_test1\",\n//       password: \"candidate_test1\",\n//       snowEnabled: true,\n//     }\n//     const headers: HeadersInit = {\n//       method: \"POST\",\n//       accept: \"*/*\",\n//       \"Content-Type\": \"application/json\",\n//     }\n\n//     return client(TOKEN_URL, {\n//       method: \"POST\",\n//       body: JSON.stringify(user),\n//       headers,\n//     }).then((response) => {\n//       const value = (response as any).token\n\n//       safeStorageSet(TOKEN_KEY, value)\n//       return (response as any).token as string\n//     })\n//   }\n    return \n}\n\nexport { getToken }\n"]},"metadata":{},"sourceType":"module"}